buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "daporkchop" // 找了一辈子
            url = "https://maven.daporkchop.net/"
        }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        maven { url = "https://jitpack.io/" }
    }
}

plugins {
    id "java"
    id "idea"
    id "net.minecraftforge.gradle.forge"
    id "org.spongepowered.mixin"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = '1.0.0'

archivesBaseName = "FPSBoostV3"

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url = "https://repo.spongepowered.org/maven" }
    maven { url = "https://maven.daporkchop.net/" }
    flatDir {
        dirs '.'
    }
}

dependencies {
    implementation name: 'forgeBin-1.8.9-11.15.1.2318-1.8.9'
    implementation 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    implementation 'com.github.Vatuu:discord-rpc:1.6.2'

    compileOnly("org.projectlombok:lombok:1.18.38")
    annotationProcessor("org.projectlombok:lombok:1.18.38")

    testCompileOnly("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_20"
    makeObfSourceJar = false
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.json'
        include '**/*_at.cfg'
        into 'META-INF'
    }

    // 确保mcmod.info文件被包含在jar包的根目录
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
    }

    filesMatching('mcmod.info') {
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
}

configurations.runtimeOnly.canBeResolved = true

tasks.named("runClient") {
    classpath += configurations.runtimeClasspath
}

tasks.named("jar") {
    from {
        configurations.runtimeClasspath.findAll {
            (it.name.contains("discord-rpc") || it.name.contains("mixin")) && it.name.endsWith(".jar")
        }.collect { zipTree(it) }
    }

    manifest {
        attributes(
                "FMLCorePlugin": "cn.fpsboost.mixins.MixinLoader",
                "FMLCorePluginContainsFMLMod": true,
                "ForceLoadAsMod": true,
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": "0",
                "MixinConfigs": "mixins.fpsboost.json"
        )
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.DSA', 'META-INF/*.SF'
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}